name: Solar System Workflow

on: 
    workflow_dispatch:
    push: 
        branches: 
          - main
          - 'feature/*'
          
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'  
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }} 
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:      
        name: Unit Testing
        services:
          mongo_db:
            image: siddharth67/mongo-db:non-prod
            ports: 
              - 27017:27017
        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'  
          MONGO_USERNAME: non-prod-user          
          MONGO_PASSWORD: non-prod-password
        strategy:
          matrix:
            nodejs_version: [18, 19, 20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
        - name: Install dependencies
          run: npm install

        - name: Unit testing
          id: nodejs-unit-test-step
          run: npm test

        - name: Archive Test Result
          if: always()
          #if: steps.nodejs-unit-test-step.outcome == 'failure' || steps.nodejs-unit-test-step.outcome == 'success'
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result-${{ matrix.operating_system }}-Node-${{ matrix.nodejs_version }}
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install dependencies
          run: npm install

        - name: Check Code Coverage
          run: npm run coverage
          continue-on-error: true

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
        name: Docker Tasks
        runs-on: ubuntu-latest
        needs: [code-coverage, unit-testing]
        permissions: 
          packages: write
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Docker Hub Login
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ vars.DOCKER_HUB_USERANME }}
                password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            
            - name: GHCR Login
              uses: docker/login-action@v2.2.0
              with:
                registry: ghcr.io
                username: ${{ github.repository_owner }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker Image Build
              uses: docker/build-push-action@v4
              with:
                context: .
                push: false
                tags: ${{ vars.DOCKER_HUB_USERANME }}/solar-system:${{ github.sha }}

            - name: Docker Image Testing
              run: |
                docker images
                docker run --name solar-system-app -d \
                    -p 3000:3000 \
                    -e MONGO_URI=$MONGO_URI \
                    -e MONGO_USERNAME=$MONGO_USERNAME \
                    -e MONGO_PASSWORD=$MONGO_PASSWORD \
                    ${{ vars.DOCKER_HUB_USERANME }}/solar-system:${{ github.sha }}
                
                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo $IP

                echo Testing Image URL using wget
                wget - q -O - 127.0.0.1:3000/live | grep live

            - name: Container Image Push
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: |
                  ${{ vars.DOCKER_HUB_USERANME }}/solar-system:${{ github.sha }}
                  ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    